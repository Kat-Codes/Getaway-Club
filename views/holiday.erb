<%=  erb :defaultheader %>

<!DOCTYPE html>
    <html lang="en">
    
<head>
  <title>Homepage</title>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Places Searchbox</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 50%;
      }
      /* Optional: Makes the sample page fill the window. */
      html, body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #description {
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
      }

      #infowindow-content .title {
        font-weight: bold;
      }

      #infowindow-content {
        display: none;
      }

      #map #infowindow-content {
        display: inline;
      }

      .pac-card {
        margin: 10px 10px 0 0;
        border-radius: 2px 0 0 2px;
        box-sizing: border-box;
        -moz-box-sizing: border-box;
        outline: none;
        box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        background-color: #fff;
        font-family: Roboto;
      }

      #pac-container {
        padding-bottom: 12px;
        margin-right: 12px;
      }

      .pac-controls {
        display: inline-block;
        padding: 5px 11px;
      }

      .pac-controls label {
        font-family: Roboto;
        font-size: 13px;
        font-weight: 300;
      }

      #pac-input {
        background-color: #fff;
        font-family: Roboto;
        font-size: 15px;
        font-weight: 300;
        margin-left: 12px;
        padding: 0 11px 0 13px;
        text-overflow: ellipsis;
        width: 400px;
      }

      #pac-input:focus {
        border-color: #4d90fe;
      }

      #title {
        color: #fff;
        background-color: #4d90fe;
        font-size: 25px;
        font-weight: 500;
        padding: 6px 12px;
      }
      #target {
        width: 345px;
      }
    </style>
</head>
    
<body style="overflow-x: hidden">
    <p style="text-align: center;font-size:20px">Your destination is:<br /><strong style="font-size:50px"><%= @final[0] %>!</strong></p>
    <div class="row" style="text-align: center;margin-top: 15px">
        <div class="col-sm-1">
        </div>
            <div class="col-sm-2">
                    <p >Your flight will cost<br /> <strong style="font-size:30px">£<%= @final[1] %></strong><br />cost per person: <br /0><strong style="font-size:20px">£<%= @fuck %>0</strong></p>
        </div>
        <div class="col-sm-2">
                <p >You will be leaving on: <br /><strong style="font-size:30px"><%= @final[2]  %></strong></p>
        </div>
        <div class="col-sm-2">
                <p >You will be returning on <br /><strong style="font-size:30px"><%=  @final[3] %></strong></p>
        </div>
        <div class="col-sm-2">
             <p >You will be flying from:<br /><strong style="font-size:30px"><%= @final[4] %></strong></p>
        </div>
        <div class="col-sm-2">
            <p >you will be flying to: <br /><strong style="font-size:30px"><%= @final[5] %></strong></p>
        </div>
    </div>
    <div><h1>About <strong><%= @final[0] %></strong>:</h1><br /><%= @wiki%></div>
    <div class="row" style="text-align: center;margin-top: 15px">
            <div class="col-sm-5">
    
    <input id="pac-input" class="controls" type="text" value=<%= @final[5] %>>
    <div id="map"></div>
    <script>
      // This example adds a search box to a map, using the Google Place Autocomplete
      // feature. People can enter geographical searches. The search box will return a
      // pick list containing a mix of places and predicted search terms.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

     

      function initAutocomplete() {
        var map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 51.5072143, lng: -0.1299827},
          zoom: 13,
          mapTypeId: 'roadmap'
        });

        // Create the search box and link it to the UI element.
        var input          =  document.getElementById('pac-input'),
           ac              = new google.maps.places.SearchBox(input),
           itemsloaded    =  google.maps.event
                          .addDomListener(document.body,
                                          'DOMNodeInserted',
                                          function(e){ 
                            if(e.target.className==='pac-item'){
                              //remove the listener
                              google.maps.event.removeListener(itemsloaded);
                              //trigger the events
                              google.maps.event.trigger( input, 'keydown', {keyCode:40})
                              google.maps.event.trigger( input, 'keydown', {keyCode:13})
                              google.maps.event.trigger( input, 'focus')
                              google.maps.event.trigger( input, 'keydown', {keyCode:13})
                            }
                          });
        var searchBox = new google.maps.places.SearchBox(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        // Bias the SearchBox results towards current map's viewport.
        map.addListener('bounds_changed', function() {
          searchBox.setBounds(map.getBounds());
        });


        var markers = [];
        // Listen for the event fired when the user selects a prediction and retrieve
        // more details for that place.
        searchBox.addListener('places_changed', function() {
          var places = searchBox.getPlaces();

          if (places.length == 0) {
            return;
          }

          // Clear out the old markers.
          markers.forEach(function(marker) {
            marker.setMap(null);
          });
          markers = [];

          // For each place, get the icon, name and location.
          var bounds = new google.maps.LatLngBounds();
          places.forEach(function(place) {
            if (!place.geometry) {
              console.log("Returned place contains no geometry");
              return;
            }
            var icon = {
              url: place.icon,
              size: new google.maps.Size(71, 71),
              origin: new google.maps.Point(0, 0),
              anchor: new google.maps.Point(17, 34),
              scaledSize: new google.maps.Size(25, 25)
            };

            // Create a marker for each place.
            markers.push(new google.maps.Marker({
              map: map,
              icon: icon,
              title: place.name,
              position: place.geometry.location
            }));

            if (place.geometry.viewport) {
              // Only geocodes have viewport.
              bounds.union(place.geometry.viewport);
            } else {
              bounds.extend(place.geometry.location);
            }
          });
          map.fitBounds(bounds);
        });

      }
        

    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD9VJF3Y5i3wB502XQ7pYYbwK6OTOcN3wI&libraries=places&callback=initAutocomplete"
            async defer></script>
    </div>
        <div class="col-sm-2"> </div>
        <div class="col-sm-5">
    

    <a href=<%=  @link %>><img src="button2.png" style="height:auto;width:100%" title="SkyScanner" alt="SkyScannerLink"></a>
        </div>
    </div>

   
    
</body>
        
        <footer style="background-color:#b35900;" class="page-footer" ><div style="padding-top:10px; padding-bottom:10px;color:white">Made by H. Sams, K.Walker, A Chapman, D. Marshall</div></footer>
</html>
